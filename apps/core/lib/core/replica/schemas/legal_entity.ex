defmodule Core.Replica.LegalEntity do
  @moduledoc false

  use Ecto.Schema

  @primary_key {:id, :binary_id, autogenerate: true}
  schema "legal_entities" do
    field(:is_active, :boolean, default: false)
    field(:addresses, {:array, :map})
    field(:edrpou, :string)
    field(:email, :string)
    field(:kveds, {:array, :string})
    field(:legal_form, :string)
    field(:name, :string)
    field(:owner_property_type, :string)
    field(:phones, {:array, :map})
    field(:public_name, :string)
    field(:short_name, :string)
    field(:status, :string)
    field(:type, :string)
    field(:inserted_by, Ecto.UUID)
    field(:updated_by, Ecto.UUID)
    field(:created_by_mis_client_id, Ecto.UUID)
    field(:mis_verified, :string, default: "NOT_VERIFIED")
    field(:nhs_verified, :boolean, default: false)
    field(:capitation_contract_id, Ecto.UUID)
    field(:archive, :map)
    field(:website, :string)
    field(:beneficiary, :string)
    field(:receiver_funds_code, :string)
    field(:nhs_reviewed, :boolean)
    field(:nhs_comment, :string)
    field(:edr_verified, :boolean)
    field(:registration_country, :string)
    field(:registration_area, :string)
    field(:registration_region, :string)
    field(:registration_settlement, :string)
    field(:registration_settlement_type, :string)
    field(:registration_settlement_id, :string)
    field(:registration_street_type, :string)
    field(:registration_street, :string)
    field(:registration_building, :string)
    field(:registration_zip, :string)
    field(:residence_country, :string)
    field(:residence_area, :string)
    field(:residence_region, :string)
    field(:residence_settlement, :string)
    field(:residence_settlement_type, :string)
    field(:residence_settlement_id, :string)
    field(:residence_street_type, :string)
    field(:residence_street, :string)
    field(:residence_building, :string)
    field(:residence_zip, :string)
    field(:mobile_phone, :string)
    field(:land_line_phone, :string)

    has_one(:medical_service_provider, {"medical_service_providers", Core.Replica.MSP}, on_replace: :delete)
    has_many(:employees, Core.Replica.Employee, on_replace: :delete)

    timestamps(type: :utc_datetime)
  end
end
